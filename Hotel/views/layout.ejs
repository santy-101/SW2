<!DOCTYPE html>
<html>

<head>
    <title>
        <%=typeof title == 'undefined' ? 'New Sails App' : title%>
    </title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <script src="https://code.jquery.com/jquery.min.js"></script>



    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/bootstrap/css/bootstrap-theme.css">
    <link rel="stylesheet" href="/bootstrap/css/bootstrap-theme.min.css">
    <link rel="stylesheet" href="/bootstrap/css/bootstrap.css">
    <link rel="stylesheet" href="/bootstrap/css/bootstrap.min.css">
    <!--STYLES END-->

    <style>
        .sello {
            text-align: center;
            font: oblique bold 120% cursive;
        }
    </style>
</head>

<body>
    <nav id="nav" style="background-color:#8A4B08;">
        <!--        <div style=" margin-left:8%; margin-top:18px;"><img src="/assets/images/logo.png"></div>-->
        <br>
        <div class="col-md-4"><a href="" style="color: #FFFFFF;">RESERVAR</a></div>
        <div class="col-md-4"><a href="" style="color: #FFFFFF;">CONSULTAR RESERVAS</a></div>
        <div class="col-md-4"><a href="" style="color: #FFFFFF;">GALERIA</a></div>
<!--
        <div class="col-md-2"><a href="" style="color: #FFFFFF;">PROMOCIONES</a></div>
        <div class="col-md-2"><a href="" style="color: #FFFFFF;">RESERVAS</a></div>
        <div class="col-md-2"><a href="" style="color: #FFFFFF;">GALER√çA</a></div>
-->
        <br>
        <br>


    </nav>
    <div class="container">
        <%- body %>






    </div>

    <div class="sello" style="text-align=center">---La posada---</div>

    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->


    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/dependencies/npm.js"></script>
    <script src="/jQuery/jquery-3.1.1.min.js"></script>
    <script src="/bootstrap/js/bootstrap.js"></script>
    <script src="/bootstrap/js/bootstrap.min.js"></script>
    <script src="/bootstrap/js/npm.js"></script>
    <!--SCRIPTS END-->
</body>

</html>